name: Test, Build & Publish

on: [push]

jobs:
  lint-ts:
    runs-on: ubuntu-20.04
    env:
      GBANS_GENERAL_STEAM_KEY: ${{ secrets.GBANS_GENERAL_STEAM_KEY }}
    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        working-directory: ./frontend
        run: yarn

      - name: Prettier
        working-directory: ./frontend
        run: yarn run prettier:check

      - name: ESLint
        working-directory: ./frontend
        run: yarn run eslint:check

#  lint-golangci:
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/setup-go@v4
#        with:
#          go-version: '1.20'
#          cache: false
#      - uses: actions/checkout@v3
#      - name: golangci-lint
#        uses: golangci/golangci-lint-action@v3
#        with:
#          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
#          version: v1.53
#      - run: make lint_golangci

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - run: go install honnef.co/go/tools/cmd/staticcheck@latest
      - uses: actions/checkout@v3
      - run: make static

  lint-codeql:
    name: Analyze
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go', 'javascript' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      # ✏️ If the Autobuild fails above, remove it and uncomment the following three lines
      #    and modify them (or add more) to build your code if your project
      #    uses a compiled language

      #- run: |
      #   make bootstrap
      #   make release

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  docker-test:
    needs: [lint-ts, lint-codeql, staticcheck] # TODO readd lint-golangci,
    runs-on: ubuntu-20.04
    env:
      GBANS_GENERAL_STEAM_KEY: ${{ secrets.GBANS_GENERAL_STEAM_KEY }}
    steps:
      - uses: actions/checkout@v2

      - name: Build the docker-compose stack
        run: make docker_test

  docker-publish:
    needs: [docker-test]
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build gbans image
        run: |
          docker build . --tag ghcr.io/leighmacdonald/gbans:${GITHUB_REF##*/}
          docker push ghcr.io/leighmacdonald/gbans:${GITHUB_REF##*/}


